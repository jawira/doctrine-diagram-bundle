<?xml version="1.0" encoding="UTF-8"?>
<project name="Doctrine Diagram Bundle" default="help" phingVersion="3">
  <description>Create diagrams from your doctrine database</description>


  <target name="setup" depends="composer:install"/>
  <target name="qa" depends="composer:normalize,composer:validate,cs:fix,cs:check,phpstan:analyse,composer:audit"/>
  <target name="docs" depends="plantuml:convert,mkdocs:serve"/>


  <target name="phpstan:analyse" description="Analyse source code">
    <exec executable="vendor/bin/phpstan" passthru="true" checkreturn="true">
      <arg value="analyse"/>
      <arg value="--no-progress"/>
      <arg value="--ansi"/>
      <arg value="--level=max"/>
      <arg path="src"/>
    </exec>
  </target>

  <target name="composer:install" description="PHP dependencies">
    <composer command="install">
      <arg value="--no-interaction"/>
      <arg value="--prefer-dist"/>
      <arg value="--no-progress"/>
      <arg value="--ansi"/>
    </composer>
  </target>

  <target name="composer:audit" description="Checks for security vulnerability advisories for installed packages">
    <composer command="audit">
      <arg value="--no-interaction"/>
      <arg value="--ansi"/>
      <arg value="--no-dev"/>
    </composer>
  </target>

  <target name="composer:validate" description="Validate composer.json">
    <composer command="validate">
      <arg value="--ansi"/>
    </composer>
  </target>

  <target name="composer:normalize" description="Normalize composer.json">
    <composer command="normalize">
      <arg value="--ansi"/>
      <arg value="--diff"/>
      <arg value="--indent-size=2"/>
      <arg value="--indent-style=space"/>
    </composer>
  </target>

  <target name="help">
    <uptodate property="uptodate.visualizer" srcfile="build.xml" targetfile="build.svg"/>
    <runtarget target="visualizer"/>
    <open path="build.svg"/>
  </target>

  <target name="visualizer" unless="uptodate.visualizer" description="Create buildfile map">
    <visualizer format="svg" footer="Phing buildfile"/>
  </target>

  <target name="mkdocs:serve" description="Run local server">
    <exec executable="mkdocs" passthru="true" checkreturn="true">
      <env key="SITE_NAME" value="'Doctrine Diagram Bundle phing'"/>
      <arg value="serve"/>
      <arg value="--verbose"/>
    </exec>
  </target>

  <target name="mkdocs:gh-deploy" description="Deploy docs to github">
    <exec executable="mkdocs" passthru="true" checkreturn="true">
      <arg value="gh-deploy"/>
      <arg value="--verbose"/>
    </exec>
  </target>

  <target name="plantuml:convert" description="Convert puml to png">
    <exec executable="vendor/bin/plantuml" checkreturn="true" passthru="true">
      <arg value="-progress"/>
      <arg value="-tpng"/>
      <arg value="-nometadata"/>
      <arg value="-output"/>
      <arg path="docs/images"/>
      <arg file="docs/images/*.puml"/>
    </exec>
  </target>

  <target name="cs:fix" description="Fixes code style in src dir.">
    <exec executable="vendor/bin/php-cs-fixer" passthru="true" checkreturn="true">
      <arg value="--ansi"/>
      <arg value="--no-interaction"/>
      <arg value="--allow-risky=yes"/>
      <arg value="fix"/>
      <arg file="src"/>
    </exec>
  </target>

  <target name="cs:check" description="Checks if configured files/directories comply with configured rules.">
    <exec executable="vendor/bin/php-cs-fixer" passthru="true" checkreturn="true">
      <arg value="--ansi"/>
      <arg value="--no-interaction"/>
      <arg value="--allow-risky=yes"/>
      <arg value="check"/>
      <arg file="src"/>
    </exec>
  </target>

</project>
